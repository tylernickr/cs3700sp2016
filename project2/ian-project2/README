For the final version of this assignment, we build upon the code submitted to the milestone, fixing various small bugs resulting in occasional looping as we encountered them.  As stated in the requirements, our bridge broadcasts BPDU's roughly every 500ms, times out BPDU's every 750ms, and times out forwarding table entries every 5 seconds.  We use the standard bpdu concept (root, cost, timeSent) but add a few additional fields to help our program.  Firstly, we include the port the bpdu was sent from originally.  This is critical in fixing self loops, as with this information we can disable the looping port that sent the original message.  Secondly, we include the 'nextHop' field to help our convergence algorithm.  The only other interesting decision we made was not to update the forwarding table when a host changes port.  We felt that unless a port on the bridge is changing state, the host's port will always be consistent, and therefore we will only see a host arriving on a different port if we have not yet converged, in which case we do not want to mistakenly update the port.  Since changing a port's state will flush the forwarding table, this seems safe (and our results from running the test script has supported this idea.


For this milestone, we focused entirely on getting the simple cases to work.  The current bridge does not account for failures (i.e. no timeouts on bpdus, forwarding table entries) but it does broadcast bpdus every 500ms (or so).  Spanning tree is constructed as we discussed it in class
